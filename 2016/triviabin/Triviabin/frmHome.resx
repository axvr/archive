<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox10.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAJAAAACQCAYAAADnRuK4AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAMDSURBVHhe7dixjRVLEEbhzQI80oFEIAVMooBcICBcfJCg27ga50ijErW3u3+dTzpuvep6I9jl
        RZIkSZIkSZIkSZIkSZIkSZIkSZKk//Bl9PeVm/8NBXrGx/PIjyjMMz+eR35EIVZ8PI/8iA638uN55Ed0
        qB0+nkd+RE9E/wPsSjfoaHalG3Q0u9INOppd6QYdza50g45mV7pBR7Mr3aCj2ZVu0NHsSjfoaHalG3Q0
        u9INOppdSZIkSZJ0APqVNrkqmrFjy9AyyVXRjB1bhpZJropm7NgytExyVTRjx5ahZZKrohk7tgwtk1wV
        zdixZWiZ5Kpoxo4tQ8skV0UzdmwZWia5KpqxY8vQMslV0YwdW4aWSa6KZuzYMrRMclU0Y8eWoWWSUzM6
        cnJqRkdOTs3oyMmpGR05OTWjIyenZnTk5NSMjpycmtGRk1MzOnJyakZHTk7N6MjJqRkdObkqmrGy7dCS
        yVXRjJVth5ZMropmrGw7tGRyVTRjZduhJZOrohkr2w4tmVwVzVjZdmjJ5Kpoxsq2Q0smV0UzVrYdWjK5
        Kpqxsu3QkslV0YyVbYeWTK6KZqxsO7RkclU0Y2XboSWTUzM6cnJqRkdOTs3oyMmpGR05OTWjIyenZnTk
        5NSMjpycmtGRk1MzOnJyakZHTk7N6MjJqRkdObkqmtHZ8ehRyVXRjM6OR49KropmdHY8elRyVTSjs+PR
        o5KrohmdHY8elVwVzejsePSo5KpoRmfHo0clV0UzOjsePSq5KprR2fHoUclV0YzOjkePSq6KZnR2PHpU
        clU0o7Pj/RnRwxKbb1WznyM6dmLzrWr2Y0THTuz7SM0+j+jYic23qtm70e8RHTyp+cb5Vr2CbyM6elJf
        R3olb0e/RnT4hObb3oz0ij6MEn+ln296P9ITfBolfUTzLR9HeqL5J1HCX2fzDf7Js8j8eWH+0Hnib2dz
        57m7P/NsYP7aO//tZP4D3PxX3B3/eps7zd3mjnNXf1WXJEmSJEmSJEmSJEmSJEmSJEmSJIV5efkHPJ5l
        MLEV+3sAAAAASUVORK5CYII=
</value>
  </data>
  <data name="PictureBox11.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAABGdBTUEAALGPC/xhBQAAAHtJREFUSEvt
        zsENgCAQBVG6oy27pQwEnYsifJaEBBNe4sWdBdy2phjjkb63g/EYDunGWj/2urG2GB4nkTd7kidmEvn8
        C8zYl8jt2JfIqz3jEnOJfP4FZuxL5HbsS+RFz+86Ool86IJwp02B3C4t+3zAdcy3PPPk2y84dwIuSNpx
        XPFN6wAAAABJRU5ErkJggg==
</value>
  </data>
</root>